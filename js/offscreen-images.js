"use strict";const ByteEfficiencyAudit=require("./byte-efficiency-audit.js"),Sentry=require("../../lib/sentry.js"),URL=require("../../lib/url-shim.js"),i18n=require("../../lib/i18n/i18n.js"),Interactive=require("../../computed/metrics/interactive.js"),TraceOfTab=require("../../computed/trace-of-tab.js"),UIStrings={title:"Defer offscreen images",description:"Consider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to interactive. [Learn more](https://web.dev/offscreen-images)."},str_=i18n.createMessageInstanceIdFn(__filename,UIStrings),ALLOWABLE_OFFSCREEN_X=100,ALLOWABLE_OFFSCREEN_Y=200,IGNORE_THRESHOLD_IN_BYTES=2048,IGNORE_THRESHOLD_IN_PERCENT=75,IGNORE_THRESHOLD_IN_MS=50;class OffscreenImages extends ByteEfficiencyAudit{static get meta(){return{id:"offscreen-images",title:str_(UIStrings.title),description:str_(UIStrings.description),scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.NUMERIC,requiredArtifacts:["ImageElements","ViewportDimensions","devtoolsLogs","traces"]}}static computeVisiblePixels(e,t){const s=t.innerWidth,i=t.innerHeight,r=Math.max(e.top,-1*ALLOWABLE_OFFSCREEN_Y),n=Math.min(e.right,s+ALLOWABLE_OFFSCREEN_X),a=Math.min(e.bottom,i+ALLOWABLE_OFFSCREEN_Y),c=Math.max(e.left,-1*ALLOWABLE_OFFSCREEN_X);return Math.max(n-c,0)*Math.max(a-r,0)}static computeWaste(e,t,s){const i=s.find(t=>t.url===e.src);if(!e.resourceSize||!i)return null;if("lazy"===e.loading||"eager"===e.loading)return null;const r=URL.elideDataURI(e.src),n=e.displayedWidth*e.displayedHeight,a=this.computeVisiblePixels(e.clientRect,t),c=0===n?1:1-a/n,l=e.resourceSize,o=Math.round(l*c);return Number.isFinite(c)?{url:r,requestStartTime:i.startTime,totalBytes:l,wastedBytes:o,wastedPercent:100*c}:new Error(`Invalid image sizing information ${r}`)}static filterLanternResults(e,t){const s=t.pessimisticEstimate.nodeTimings;let i=0;const r=new Map;for(const[e,t]of s)if("cpu"===e.type&&t.duration>=50)i=Math.max(i,t.startTime);else if("network"===e.type){const s=e;r.set(s.record.url,t.startTime)}return e.filter(e=>{if(e.wastedBytes<IGNORE_THRESHOLD_IN_BYTES)return!1;if(e.wastedPercent<IGNORE_THRESHOLD_IN_PERCENT)return!1;return(r.get(e.url)||0)<i-IGNORE_THRESHOLD_IN_MS})}static filterObservedResults(e,t){return e.filter(e=>!(e.wastedBytes<IGNORE_THRESHOLD_IN_BYTES)&&(!(e.wastedPercent<IGNORE_THRESHOLD_IN_PERCENT)&&e.requestStartTime<t/1e6-IGNORE_THRESHOLD_IN_MS/1e3))}static computeWasteWithTTIGraph(e,t,s){return super.computeWasteWithTTIGraph(e,t,s,{includeLoad:!1})}static async audit_(e,t,s){const i=e.ImageElements,r=e.ViewportDimensions,n=e.traces[ByteEfficiencyAudit.DEFAULT_PASS],a=e.devtoolsLogs[ByteEfficiencyAudit.DEFAULT_PASS],c=[],l=i.reduce((e,s)=>{const i=OffscreenImages.computeWaste(s,r,t);if(null===i)return e;if(i instanceof Error)return c.push(i.message),Sentry.captureException(i,{tags:{audit:this.meta.id},level:"warning"}),e;const n=e.get(i.url);return(!n||n.wastedBytes>i.wastedBytes)&&e.set(i.url,i),e},new Map),o=s.settings;let u;const d=Array.from(l.values());try{const e=await Interactive.request({trace:n,devtoolsLog:a,settings:o},s),t=e;u="simulate"===s.settings.throttlingMethod?OffscreenImages.filterLanternResults(d,t):OffscreenImages.filterObservedResults(d,e.timestamp)}catch(e){if("simulate"===s.settings.throttlingMethod)throw e;u=OffscreenImages.filterObservedResults(d,await TraceOfTab.request(n,s).then(e=>e.timestamps.traceEnd))}const m=[{key:"url",valueType:"thumbnail",label:""},{key:"url",valueType:"url",label:str_(i18n.UIStrings.columnURL)},{key:"totalBytes",valueType:"bytes",label:str_(i18n.UIStrings.columnResourceSize)},{key:"wastedBytes",valueType:"bytes",label:str_(i18n.UIStrings.columnWastedBytes)}];return{warnings:c,items:u,headings:m}}}module.exports=OffscreenImages,module.exports.UIStrings=UIStrings;